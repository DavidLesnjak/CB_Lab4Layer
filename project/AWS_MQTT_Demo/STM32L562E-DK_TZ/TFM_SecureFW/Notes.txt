How to create the TF-M Secure Firmware
--------------------------------------

uVision:
 - create new project
 - select device STM32L562QEIxQ
 - set target name STM32L562E-DK
 - launch STM32CubeMX from RTE

STM32CubeMX:
 - TrustZone not activated
 - Pinout & Configuration
 -- System Core
 --- NVIC
 ---- Code generation
 ----- Memory management: disable Generate IRQ handler
 ----- Prefetch fault, memory access fault: disable Generate IRQ handler
 ----- Undefined instruction or illegal: disable Generate IRQ handler
 ----- System service call via SWI instruction: disable Generate IRQ handler
 ----- Pendable request for system service: disable Generate IRQ handler
 --- ICACHE
 ---- Mode: 2-ways set associative cache
 -- Connectivity
 --- USART1
 ---- Mode: Asynchronous
 ---- GPIO Settings
 ----- PA9:  USART1_TX, Maximum output speed: Very High
 ----- PA10: USART1_RX, Maximum output speed: Very High
 - Clock Configuration
 -- System Clock Mux: PLLCLK
 -- PLL N: x55
 - Project Manager
 -- Code Generator: Add necessary library files as reference
 - Generate Code
 - Close
 - go back to uVision

uVision:
 - Target Options - Target - Code Generation - Software Model: Secure Mode
 - Target Options - C/C++ - Warnings: AC5-like Warnings
 - RTE
 -- select TFM:Core (SFN)
 -- select TFM:Secure Service:Crypto
 -- select TFM:Secure Service:Internal Trusted Storage
 -- select TFM Platform:* required components
 -- select Security:mbed Crypto
 -- select CMSIS Driver:Flash:Custom
 -- select CMSIS Driver:USART:Custom
 - update TFM configuration: tfm_config.h
 -- define ITS_CREATE_FLASH_LAYOUT (create initial flash layout for ITS)
 -- define TFM_CRYPTO_ENGINE_BUF_SIZE (0x4000)
 - update TFM flash layout configuration: flash_layout.h
 -- ITS_MAX_ASSET_SIZE=2048, ITS_NUM_ASSETS=4
 - add Flash Driver (taken from STM32Cube)
 - add USART Driver (output redirected to ST UART HAL)
 -- user code template: empty implementation + Send (HAL_UART_Transmit)
 - update main.h:
 -- add: extern UART_HandleTypeDef hlpuart1;
 - update main.c:
 -- define main as main0
 -- remove endless loop from main
 -- added tfm_spm_hal_post_init_platform() calling main
 - update Device:startup_stm32l562xx.s (startup file)
 -- Vector table:
 --- change __initial_sp to |Image$$ARM_LIB_STACK_MSP$$ZI$$Limit| and add IMPORT (Stack_Size=0)
 -- Reset Handler:
 --- add switch to PSP (before __main)
 - setup linker:
 -- scatter file: tfm_common_s.sct
 -- options:
    --import_cmse_lib_out="Objects/tfm_secure_fw_CMSE_Lib.o"
    --predefine="-include tfm_config.h"
    --predefine="-include tfm_config_rte.h"
    --predefine="-IRTE/_STM32L562E-DK/"
    --predefine="-IRTE/TFM_Platform/STM32L562QEIxP/"
    --diag_suppress=L6312,L6314,L6329
 - select Debug adapter: ST-Link Debugger
 - update CMSIS Zone generated files (manual update):
 -- mem_layout.h: memory regions
 -- partition_gen.h: SAU and Interrupts
 -- sys_isolation_cfg.c: GTZC and MPC/PPC
